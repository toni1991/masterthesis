
@book{coughlan_beginning_2014,
	location = {Berkeley, California?},
	title = {Beginning {COBOL} for programmers},
	isbn = {978-1-4302-6253-4},
	series = {The expert's voice in {COBOL}},
	abstract = {Beginning {COBOL} for Programmersis a comprehensive,sophisticated tutorial and modular skills referenceon the {COBOL} programming language for established programmers. This book is for you if you are a developer who would like to - or must - add {COBOL} to your repertoire. Perhaps you recognize the opportunities presented by the current {COBOL} skills crisis, or you may be working in a mission critical enterprise which retains legacy {COBOL} applications. Whatever your situation,Beginning {COBOL} for Programmers meets your needs as an established programmer moving to {COBOL}. Beginning {COBOL} for Programmersincludes coverage of the latest {COBOL} featuresand techniques, including control structures, tabular data, sequential files, procedure divisions, string handling, decimal arithmetic, report writer, object-{orientedCOBOL}, and more.You'll receive extensive introductions to the core features of the {COBOL} language, and then find solutions about how to effectively deploy {COBOL} to build robust mission critical enterprise applications that talk to legacy enterprise applications or aspects of those applications. If you've inherited some legacy {COBOL}, you'll be able to grasp the {COBOL} idioms and recognize what's happening in the code you're working with. The death of {COBOL} has been predicted time and time again, yet {COBOL} still remains a dominant force at the heart of enterprise computing.In 1997, the Gartner group estimated that of the 300 billion lines of code in the world, 240 billion (80\%) were written in {COBOL}, and that dominance is not greatly changed today.But there is a crisis on the horizon.While the number of {COBOL} programmers reaching retirement age has created a growing shortage, attempts to rewrite {COBOL} legacy systems in a more fashionable language have oftennot been successful or put aside for a number of reasons. Therefore, today's enterprise application developers - mostly skilled at C++, C\# and Java - can find {COBOL} skills open new - or old - doors, and this handy reliable reference is a book that you can turn to for your {COBOL} skills--},
	pagetotal = {556},
	publisher = {Apress},
	author = {Coughlan, Michael},
	date = {2014},
	note = {{OCLC}: ocn874119151},
	keywords = {{COBOL} (Computer program language), Computer science}
}

@book{budlong_sams_2000,
	location = {Indianapolis, Ind},
	edition = {3rd ed},
	title = {Sams teach yourself {COBOL} in 21 days},
	isbn = {978-0-672-31788-0},
	pagetotal = {1211},
	publisher = {Sams Publishing},
	author = {Budlong, Mo},
	date = {2000},
	keywords = {{COBOL} (Computer program language)},
	file = {Teach Yourself Cobol In 21 Days (2nd Ed).pdf:/home/toni/Zotero/storage/PJSNB9SJ/Teach Yourself Cobol In 21 Days (2nd Ed).pdf:application/pdf}
}