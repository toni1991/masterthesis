
@book{coughlan_beginning_2014,
  location = {{Berkeley, California?}},
  title = {Beginning {{COBOL}} for Programmers},
  isbn = {978-1-4302-6253-4},
  abstract = {Beginning COBOL for Programmersis a comprehensive,sophisticated tutorial and modular skills referenceon the COBOL programming language for established programmers. This book is for you if you are a developer who would like to - or must - add COBOL to your repertoire. Perhaps you recognize the opportunities presented by the current COBOL skills crisis, or you may be working in a mission critical enterprise which retains legacy COBOL applications. Whatever your situation,Beginning COBOL for Programmers meets your needs as an established programmer moving to COBOL. Beginning COBOL for Programmersincludes coverage of the latest COBOL featuresand techniques, including control structures, tabular data, sequential files, procedure divisions, string handling, decimal arithmetic, report writer, object-orientedCOBOL, and more.You'll receive extensive introductions to the core features of the COBOL language, and then find solutions about how to effectively deploy COBOL to build robust mission critical enterprise applications that talk to legacy enterprise applications or aspects of those applications. If you've inherited some legacy COBOL, you'll be able to grasp the COBOL idioms and recognize what's happening in the code you're working with. The death of COBOL has been predicted time and time again, yet COBOL still remains a dominant force at the heart of enterprise computing.In 1997, the Gartner group estimated that of the 300 billion lines of code in the world, 240 billion (80\%) were written in COBOL, and that dominance is not greatly changed today.But there is a crisis on the horizon.While the number of COBOL programmers reaching retirement age has created a growing shortage, attempts to rewrite COBOL legacy systems in a more fashionable language have oftennot been successful or put aside for a number of reasons. Therefore, today's enterprise application developers - mostly skilled at C++, C\# and Java - can find COBOL skills open new - or old - doors, and this handy reliable reference is a book that you can turn to for your COBOL skills--},
  pagetotal = {556},
  series = {The expert's voice in COBOL},
  publisher = {{Apress}},
  date = {2014},
  keywords = {COBOL (Computer program language),Computer science},
  author = {Coughlan, Michael},
  note = {OCLC: ocn874119151}
}

@misc{rehn_tutorials_2009,
  title = {Tutorials Schreiben Oder: {{Wenn}} Sich {{Programmierer}} in {{Prosa}} Versuchen},
  url = {http://www.christian-rehn.de/wp-content/uploads/2009/09/tutorials2.pdf},
  urldate = {2017-11-12},
  date = {2009-09-29},
  author = {Rehn, Christian}
}

@book{budlong_teach_1997,
  location = {{Indianapolis, IN}},
  title = {Teach Yourself {{Cobol}} in 21 Days},
  edition = {2nd ed},
  isbn = {978-0-672-31137-6},
  pagetotal = {1056},
  publisher = {{Sams Pub}},
  date = {1997},
  keywords = {COBOL (Computer program language)},
  author = {Budlong, Mo},
  file = {/home/toni/Zotero/storage/36CM7L4L/Teach Yourself Cobol In 21 Days (2nd Ed).pdf}
}

@book{rozanski_cobol_2004,
  langid = {german},
  location = {{Bonn}},
  title = {Cobol 2002 ge-packt},
  edition = {1. Aufl},
  isbn = {978-3-8266-1363-0},
  shorttitle = {Cobol 2002 ge-packt},
  abstract = {schnelles und effektives Nachschlagen aller Klauseln und Anweisungen ; objektorientiertes und klassisches Cobol ; Verarbeitung von XML-Dateien und Intrinsic-Funktionen},
  pagetotal = {492},
  series = {Die ge-packte Referenz},
  publisher = {{mitp-Verl}},
  date = {2004},
  author = {Rozanski, Uwe},
  file = {/home/toni/Zotero/storage/4WBEVBAM/Rozanski - 2004 - Cobol 2002 ge-packt schnelles und effektives Nach.pdf},
  note = {OCLC: 76681426}
}

@book{byrne_java_2009-1,
  langid = {english},
  location = {{Boston, MA}},
  title = {Java for {{COBOL}} Programmers},
  isbn = {978-1-58450-618-8},
  url = {http://public.eblib.com/choice/publicfullrecord.aspx?p=3136100},
  publisher = {{Charles River Media}},
  date = {2009},
  author = {Byrne, John C and Cross, Jim},
  note = {OCLC: 567983849}
}

@book{stern_cobol_2006,
  location = {{Hoboken, NJ}},
  title = {{{COBOL}} for the 21st Century},
  edition = {11th ed},
  isbn = {978-0-471-72261-8},
  pagetotal = {1},
  publisher = {{John Wiley \& Sons}},
  date = {2006},
  keywords = {COBOL (Computer program language),Structured programming},
  author = {Stern, Nancy B. and Stern, Robert A. and Ley, James P.}
}

@misc{jia_walker_cobol_2004,
  title = {{{COBOL Programming Fundamental}}},
  url = {http://yusman.staff.gunadarma.ac.id/Downloads/files/33460/COBOL_Programming_Fundamental.pdf},
  date = {2004-11},
  author = {{Jia Walker}},
  file = {/home/toni/Downloads/COBOL_Programming_Fundamental.pdf}
}

@article{colvey_cobol_2009,
  entrysubtype = {newspaper},
  langid = {british},
  title = {Cobol Hits 50 and Keeps Counting},
  issn = {0261-3077},
  url = {http://www.theguardian.com/technology/2009/apr/09/cobol-internet-programming},
  abstract = {It is 50 years old this year, but Cobol is still a key player in behind-the-scenes business software},
  journaltitle = {The Guardian},
  journalsubtitle = {Technology},
  urldate = {2017-12-14},
  date = {2009-04-08},
  keywords = {Computing,IBM,Programming,Technology},
  author = {Colvey, Scott},
  file = {/home/toni/Zotero/storage/H5783FZQ/cobol-internet-programming.html}
}

@online{kelly_cobol_2009,
  title = {Cobol \textendash{} Still Doing the Business after 50 Years},
  url = {https://www.ft.com/content/9c40ed12-569c-11de-9a1c-00144feabdc0},
  journaltitle = {Financial Times},
  urldate = {2017-12-14},
  date = {2009-07-10},
  author = {Kelly, Stephen},
  file = {/home/toni/Zotero/storage/XFAFBSU4/9c40ed12-569c-11de-9a1c-00144feabdc0.html}
}

@book{barbier_cobol_2014,
  location = {{Hoboken, NJ}},
  title = {Cobol Software Modernization},
  isbn = {978-1-84821-760-7},
  url = {http://file.allitebooks.com/20160118/COBOL%20Software%20Modernization.pdf},
  publisher = {{ISTE Ltd/John Wiley and Sons Inc}},
  date = {2014},
  author = {Barbier, Franck},
  file = {/home/toni/Zotero/storage/VQS5XKTP/COBOL Software Modernization.pdf}
}

@book{doke_cobol_2005,
  langid = {english},
  location = {{Cambridge; New York}},
  title = {{{COBOL}} Programmers Swing with {{Java}}},
  isbn = {978-0-511-08240-5},
  url = {http://www.books24x7.com/marc.asp?isbn=0521546842},
  abstract = {In the fast moving world of information technology, Java is now the number 1 programming language. Programmers and developers everywhere need to know Java to keep pace with traditional and web-based application development. COBOL Programmers Swing with Java provides COBOL programmers a clear, easy transition to Java programming by drawing on the numerous similarities between COBOL and Java. The authors introduce the COBOL programmer to the history of Java and object-oriented programming and then dive into the details of the Java syntax, always contrasting them with their parallels in COBOL. A running case study gives the reader an overall view of application development with Java, with increased functionality as new material is presented. This new edition features the development of graphical user interfaces (GUI's) using the latest in Java Swing components. The clear writing style and excellent examples make the book suitable for anyone wanting to learn Java and OO programming, whether they have a background in COBOL or not.},
  publisher = {{Cambridge University Press}},
  urldate = {2018-01-31},
  date = {2005},
  author = {Doke, E. Reed and Hardgrave, Bill C and Johnson, Richard A and Doke, E. Reed},
  note = {OCLC: 60573589}
}

@article{richards_enhancing_1984,
  langid = {english},
  title = {Enhancing {{Cobol}} Program Structure: Sections vs. Paragraphs},
  volume = {16},
  issn = {00978418},
  url = {http://portal.acm.org/citation.cfm?doid=989341.989353},
  doi = {10.1145/989341.989353},
  shorttitle = {Enhancing {{Cobol}} Program Structure},
  number = {2},
  journaltitle = {ACM SIGCSE Bulletin},
  urldate = {2018-03-13},
  date = {1984-06-01},
  pages = {48-51},
  author = {Richards, R. M.},
  file = {/home/toni/Zotero/storage/4X4QZIKH/p48-richards.pdf}
}

@book{gamma_design_1995,
  location = {{Boston, MA, USA}},
  title = {Design {{Patterns}}: {{Elements}} of {{Reusable Object}}-Oriented {{Software}}},
  isbn = {978-0-201-63361-0},
  shorttitle = {Design {{Patterns}}},
  publisher = {{Addison-Wesley Longman Publishing Co., Inc.}},
  date = {1995},
  author = {Gamma, Erich and Helm, Richard and Johnson, Ralph and Vlissides, John}
}

@online{university_of_limerick_department,
  title = {{{COBOL}} Programming - Tutorials, Lectures, Exercises, Examples},
  url = {http://www.csis.ul.ie/cobol/},
  urldate = {2018-04-14},
  author = {{University of Limerick; Department of Computer Science \& Information Systems}},
  file = {/home/toni/Zotero/storage/CV886PG2/University of Limerick\; Department of Computer Science & Information Systems - COBOL programming - tutorials, lectures, exercises.html}
}

@book{martin_clean_2008,
  location = {{Upper Saddle River, NJ, USA}},
  title = {Clean {{Code}}: {{A Handbook}} of {{Agile Software Craftsmanship}}},
  edition = {1},
  isbn = {978-0-13-235088-4},
  shorttitle = {Clean {{Code}}},
  abstract = {Even bad code can function. But if code isnt clean, it can bring a development organization to its knees. Every year, countless hours and significant resources are lost because of poorly written code. But it doesnt have to be that way.Noted software expert Robert C. Martin, presents a revolutionary paradigm with Clean Code: A Handbook of Agile Software Craftsmanship. Martin, who has helped bring agile principles from a practitioners point of view to tens of thousands of programmers, has teamed up with his colleagues from Object Mentor to distill their best agile practice of cleaning code on the fly into a book that will instill within you the values of software craftsman, and make you a better programmerbut only if you work at it.What kind of work will you be doing? Youll be reading codelots of code. And you will be challenged to think about whats right about that code, and whats wrong with it. More importantly you will be challenged to reassess your professional values and your commitment to your craft. Clean Code is divided into three parts. The first describes the principles, patterns, and practices of writing clean code. The second part consists of several case studies of increasing complexity. Each case study is an exercise in cleaning up codeof transforming a code base that has some problems into one that is sound and efficient. The third part is the payoff: a single chapter containing a list of heuristics and smells gathered while creating the case studies. The result is a knowledge base that describes the way we think when we write, read, and clean code.Readers will come away from this book understandingHow to tell the difference between good and bad codeHow to write good code and how to transform bad code into good codeHow to create good names, good functions, good objects, and good classesHow to format code for maximum readability How to implement complete error handling without obscuring code logicHow to unit test and practice test-driven developmentWhat smells and heuristics can help you identify bad codeThis book is a must for any developer, software engineer, project manager, team lead, or systems analyst with an interest in producing better code.},
  publisher = {{Prentice Hall PTR}},
  date = {2008},
  author = {Martin, Robert C.}
}

@online{_ist_1979,
  langid = {german},
  title = {Ist Cobol die Programmiersprache der Zukunft?},
  url = {https://www.computerwoche.de/a/ist-cobol-die-programmiersprache-der-zukunft,1191656},
  journaltitle = {Computerwoche},
  urldate = {2018-04-23},
  date = {1979-01-26},
  file = {/home/toni/Zotero/storage/BWUFTFNE/ist-cobol-die-programmiersprache-der-zukunft,1191656.html}
}

@online{rubens_why_2016,
  langid = {english},
  title = {Why It's Time to Learn {{COBOL}}},
  url = {https://www.cio.com/article/3050836/developer/why-its-time-to-learn-cobol.html},
  abstract = {COBOL offers the promise of job security and above-average pay. Even some of the cool kids are doing it.},
  journaltitle = {CIO},
  urldate = {2018-04-23},
  date = {2016-04-01},
  author = {Rubens, Paul},
  file = {/home/toni/Zotero/storage/QPHP2FFT/why-its-time-to-learn-cobol.html}
}

@online{thibodeau_should_2013,
  langid = {english},
  title = {Should {{Universities Offer Cobol Classes}}?},
  url = {https://www.cio.com/article/2386947/education/should-universities-offer-cobol-classes-.html},
  abstract = {Differing views view from four schools about the need to teach the distinguished IT programming language.},
  journaltitle = {CIO},
  urldate = {2018-04-23},
  date = {2013-04-08},
  author = {Thibodeau, Patrick},
  file = {/home/toni/Zotero/storage/SRFJURB3/should-universities-offer-cobol-classes-.html}
}

@online{beat_balzli_cobol-programmierer_2017,
  langid = {german},
  title = {Cobol-Programmierer gesucht: Diese Unternehmen setzen auf IT-Rentner},
  url = {https://www.wiwo.de/unternehmen/banken/cobol-programmierer-gesucht-diese-unternehmen-setzen-auf-it-rentner/19679936.html},
  shorttitle = {Cobol-Programmierer gesucht},
  abstract = {Banken holen verst{\"a}rkt IT-Veteranen aus dem Ruhestand zur{\"u}ck. Nicht nur in Deutschland, auch in den USA suchen sie Programmierer, die Cobol beherrschen. Ihnen winken Stundenl{\"o}hne von mehr als 100 Dollar.},
  journaltitle = {WirtschaftsWoche},
  urldate = {2018-04-25},
  date = {2017-04-19},
  author = {{Beat Balzli}},
  file = {/home/toni/Zotero/storage/LREADMDW/19679936.html}
}

@online{_tiobe_,
  title = {{{TIOBE Index}} | {{TIOBE}} - {{The Software Quality Company}}},
  url = {https://www.tiobe.com/tiobe-index/},
  urldate = {2018-04-25},
  file = {/home/toni/Zotero/storage/DFCYHRH5/tiobe-index.html}
}

@online{edsger_wybe_dijkstra_how_1975,
  title = {How Do We Tell Truths That Might Hurt?},
  url = {https://www.cs.utexas.edu/users/EWD/transcriptions/EWD04xx/EWD498.html},
  urldate = {2018-04-25},
  date = {1975-06-18},
  author = {{Edsger Wybe Dijkstra}},
  file = {/home/toni/Zotero/storage/IKEUAG7Y/EWD498.html}
}

@online{florian_hamann_banken_2017,
  title = {In {{Banken}} Leben {{Dinosaurier}}: {{Cobol}} Kaum Totzukriegen},
  url = {https://news.efinancialcareers.com/de-de/272568},
  shorttitle = {In {{Banken}} Leben {{Dinosaurier}}},
  abstract = {Die Uraltsprache Cobol ist bei Finandienstleistern immer noch im Einsatz. Programmierer k{\"o}nnen gutes Geld verdienen.},
  journaltitle = {eFinancialCareers},
  urldate = {2018-04-25},
  date = {2017-01-31},
  author = {{Florian Hamann}},
  file = {/home/toni/Zotero/storage/W9QVGZP5/in-banken-leben-dinosaurier-cobol-kaum-totzukriegen.html}
}

@misc{susanne_hackmack_objekte_2018,
  title = {Objekte, {{Typen}}, {{Typhierarchien}}, {{Instanzen}}, {{Klassen}}},
  url = {http://www.fb10.uni-bremen.de/homepages/hackmack/clst/pdf/klassen.pdf},
  urldate = {2018-04-28},
  date = {2018},
  author = {{Susanne Hackmack}}
}

@misc{ibm_corporation_enterprise_2013,
  title = {Enterprise {{COBOL}} for z/{{OS Language Reference}}},
  url = {https://www.ibm.com/support/knowledgecenter/SSQ2R2_9.0.1/com.ibm.ent.cbl.zos.doc/PGandLR/igy5lr10.pdf},
  urldate = {2018-05-04},
  date = {2013},
  author = {{IBM Corporation}},
  file = {/home/toni/Zotero/storage/IUVBAWLR/igy5lr10.pdf}
}


